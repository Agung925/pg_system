const gulp = require('gulp');
const postcss = require('gulp-postcss');
const cssnano = require('cssnano');
const autoprefixer = require('autoprefixer');
const fileinclude = require('gulp-file-include');
const htmlmin = require('gulp-htmlmin');
const cleanCSS = require('gulp-clean-css');
const terser = require('gulp-terser');
const imagemin = require('gulp-imagemin');

// Paths
const paths = {
  html: {
    src: 'src/pages/**/*.html',
    dest: 'dist/pages/'
  },
  css: {
    src: 'src/css/**/*.css',
    dest: 'dist/css/'
  },
  js: {
    src: 'src/js/**/*.js',
    dest: 'dist/js/'
  },
  images: {
    src: 'src/images/**/*.{jpg,jpeg,png,svg}',
    dest: 'dist/images/'
  }
};

// Process HTML
function html() {
  return gulp.src(paths.html.src)
    .pipe(fileinclude()) // Include partials
    .pipe(htmlmin({ collapseWhitespace: true })) // Minify HTML
    .pipe(gulp.dest(paths.html.dest));
}

// Process CSS
function css() {
  return gulp.src(paths.css.src)
    .pipe(postcss([require('tailwindcss'), autoprefixer(), cssnano()]))
    .pipe(cleanCSS())
    .pipe(gulp.dest(paths.css.dest));
}

// Process JavaScript
function js() {
  return gulp.src(paths.js.src)
    .pipe(terser()) // Minify JS
    .pipe(gulp.dest(paths.js.dest));
}

// Optimize Images
function images() {
  return gulp.src(paths.images.src)
    .pipe(imagemin())
    .pipe(gulp.dest(paths.images.dest));
}

// Watch files
function watchFiles() {
  gulp.watch(paths.html.src, html);
  gulp.watch(paths.css.src, css);
  gulp.watch(paths.js.src, js);
  gulp.watch(paths.images.src, images);
}

// Define complex tasks
const build = gulp.series(gulp.parallel(html, css, js, images));

// Export tasks
exports.html = html;
exports.css = css;
exports.js = js;
exports.images = images;
exports.watch = watchFiles;
exports.build = build;
exports.default = build;
